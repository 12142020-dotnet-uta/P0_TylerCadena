// <auto-generated />

#pragma warning disable 1591

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TylerMart.Storage.Contexts;

namespace TylerMart.Storage.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20201226231533_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TylerMart.Domain.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EmailAddress = "tyler.cadena@revature.net",
                            FirstName = "Tyler",
                            LastName = "Cadena",
                            Password = "tylercadena"
                        },
                        new
                        {
                            ID = 2,
                            EmailAddress = "george.bumble@revature.net",
                            FirstName = "George",
                            LastName = "Bumble",
                            Password = "georgebumble"
                        });
                });

            modelBuilder.Entity("TylerMart.Domain.Models.Location", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "New Jersey"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Florida"
                        });
                });

            modelBuilder.Entity("TylerMart.Domain.Models.LocationProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LocationID");

                    b.HasIndex("ProductID");

                    b.ToTable("LocationProducts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            LocationID = 1,
                            ProductID = 1
                        },
                        new
                        {
                            ID = 2,
                            LocationID = 1,
                            ProductID = 1
                        },
                        new
                        {
                            ID = 3,
                            LocationID = 1,
                            ProductID = 2
                        },
                        new
                        {
                            ID = 4,
                            LocationID = 1,
                            ProductID = 2
                        },
                        new
                        {
                            ID = 5,
                            LocationID = 2,
                            ProductID = 1
                        },
                        new
                        {
                            ID = 6,
                            LocationID = 2,
                            ProductID = 1
                        },
                        new
                        {
                            ID = 7,
                            LocationID = 2,
                            ProductID = 2
                        },
                        new
                        {
                            ID = 8,
                            LocationID = 2,
                            ProductID = 2
                        });
                });

            modelBuilder.Entity("TylerMart.Domain.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("LocationID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Complete = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 1,
                            LocationID = 1
                        },
                        new
                        {
                            ID = 2,
                            Complete = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 2,
                            LocationID = 2
                        });
                });

            modelBuilder.Entity("TylerMart.Domain.Models.OrderProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            OrderID = 1,
                            ProductID = 1
                        },
                        new
                        {
                            ID = 2,
                            OrderID = 1,
                            ProductID = 2
                        },
                        new
                        {
                            ID = 3,
                            OrderID = 2,
                            ProductID = 1
                        },
                        new
                        {
                            ID = 4,
                            OrderID = 2,
                            ProductID = 2
                        });
                });

            modelBuilder.Entity("TylerMart.Domain.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "You can carry stuff around",
                            Name = "Bag",
                            Price = 3.50m
                        },
                        new
                        {
                            ID = 2,
                            Description = "Helpful for those with poor eyesight",
                            Name = "Glasses",
                            Price = 20.00m
                        });
                });

            modelBuilder.Entity("TylerMart.Domain.Models.LocationProduct", b =>
                {
                    b.HasOne("TylerMart.Domain.Models.Location", "Location")
                        .WithMany("LocationProducts")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TylerMart.Domain.Models.Product", "Product")
                        .WithMany("LocationProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TylerMart.Domain.Models.Order", b =>
                {
                    b.HasOne("TylerMart.Domain.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TylerMart.Domain.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("TylerMart.Domain.Models.OrderProduct", b =>
                {
                    b.HasOne("TylerMart.Domain.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TylerMart.Domain.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TylerMart.Domain.Models.Location", b =>
                {
                    b.Navigation("LocationProducts");
                });

            modelBuilder.Entity("TylerMart.Domain.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("TylerMart.Domain.Models.Product", b =>
                {
                    b.Navigation("LocationProducts");

                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}

#pragma warning restore 1591
